diff --git a/lib/const/data.dart b/lib/const/data.dart
index 6582b20..bb0d449 100644
--- a/lib/const/data.dart
+++ b/lib/const/data.dart
@@ -16,7 +16,7 @@ const servers = {
     'port': '8080',
   },
 };
-const SERVER = 'prod_server';
+const SERVER = 'test_server';
 final protocol = servers[SERVER]!['protocol'];
 final host = servers[SERVER]!['host'];
 final port = servers[SERVER]!['port'];
diff --git a/lib/repositories/delete_user_repository.dart b/lib/repositories/delete_user_repository.dart
index 347760a..563ada5 100644
--- a/lib/repositories/delete_user_repository.dart
+++ b/lib/repositories/delete_user_repository.dart
@@ -74,4 +74,27 @@ class DeleteUserRepository {
       throw DeleteUserModelError.fromJson(response.data);
     }
   }
+
+  Future<String> getEmail() async {
+    final response = await dio.get(
+      '$basePath/exit/email',
+      options: Options(
+        headers: {
+          'Content-Type': 'application/json',
+          'accessToken': 'true',
+        },
+      ),
+    );
+
+    logger.d(response.data);
+
+    logger
+        .d('getEmail - ${response.realUri} 로 요청 성공! (${response.statusCode})');
+
+    if (response.statusCode == 200) {
+      return response.data['message'];
+    } else {
+      throw DeleteUserModelError.fromJson(response.data);
+    }
+  }
 }
diff --git a/lib/viewmodels/delete_user_view_model.dart b/lib/viewmodels/delete_user_view_model.dart
index 3ca8922..ad9b057 100644
--- a/lib/viewmodels/delete_user_view_model.dart
+++ b/lib/viewmodels/delete_user_view_model.dart
@@ -4,6 +4,7 @@ import 'package:usw_circle_link/models/delete_user_model.dart';
 import 'package:usw_circle_link/repositories/delete_user_repository.dart';
 import 'package:usw_circle_link/secure_storage/secure_storage.dart';
 import 'package:usw_circle_link/utils/error_util.dart';
+import 'package:usw_circle_link/utils/logger/logger.dart';
 import 'package:usw_circle_link/viewmodels/state/delete_user_state.dart';
 import 'package:usw_circle_link/viewmodels/user_view_model.dart';
 
@@ -104,6 +105,14 @@ class DeleteUserViewModel extends AutoDisposeNotifier<DeleteUserState> {
     }
   }
 
+  Future<void> getEmail() async {
+    final result = await ref.read(deleteUserRepositoryProvider).getEmail();
+    logger.d(result);
+    state = state.copyWith(
+      email: result,
+    );
+  }
+
   void setCode(String value) {
     state = state.copyWith(
       code: value,
diff --git a/lib/viewmodels/state/delete_user_state.dart b/lib/viewmodels/state/delete_user_state.dart
index f04e27a..e11fd7b 100644
--- a/lib/viewmodels/state/delete_user_state.dart
+++ b/lib/viewmodels/state/delete_user_state.dart
@@ -9,6 +9,7 @@ class DeleteUserState with _$DeleteUserState {
     @Default(false) bool isSendCodeSuccess,
     @Default(false) bool isVerifyCodeSuccess,
     @Default('') String code,
+    @Default('') String email,
     String? error,
     @Default(false) bool isCodeError,
   }) = _DeleteUserState;
diff --git a/lib/viewmodels/state/delete_user_state.freezed.dart b/lib/viewmodels/state/delete_user_state.freezed.dart
index b6adb96..8dcdd17 100644
--- a/lib/viewmodels/state/delete_user_state.freezed.dart
+++ b/lib/viewmodels/state/delete_user_state.freezed.dart
@@ -20,6 +20,7 @@ mixin _$DeleteUserState {
   bool get isSendCodeSuccess => throw _privateConstructorUsedError;
   bool get isVerifyCodeSuccess => throw _privateConstructorUsedError;
   String get code => throw _privateConstructorUsedError;
+  String get email => throw _privateConstructorUsedError;
   String? get error => throw _privateConstructorUsedError;
   bool get isCodeError => throw _privateConstructorUsedError;
 
@@ -39,6 +40,7 @@ abstract class $DeleteUserStateCopyWith<$Res> {
       bool isSendCodeSuccess,
       bool isVerifyCodeSuccess,
       String code,
+      String email,
       String? error,
       bool isCodeError});
 }
@@ -60,6 +62,7 @@ class _$DeleteUserStateCopyWithImpl<$Res, $Val extends DeleteUserState>
     Object? isSendCodeSuccess = null,
     Object? isVerifyCodeSuccess = null,
     Object? code = null,
+    Object? email = null,
     Object? error = freezed,
     Object? isCodeError = null,
   }) {
@@ -80,6 +83,10 @@ class _$DeleteUserStateCopyWithImpl<$Res, $Val extends DeleteUserState>
           ? _value.code
           : code // ignore: cast_nullable_to_non_nullable
               as String,
+      email: null == email
+          ? _value.email
+          : email // ignore: cast_nullable_to_non_nullable
+              as String,
       error: freezed == error
           ? _value.error
           : error // ignore: cast_nullable_to_non_nullable
@@ -105,6 +112,7 @@ abstract class _$$DeleteUserStateImplCopyWith<$Res>
       bool isSendCodeSuccess,
       bool isVerifyCodeSuccess,
       String code,
+      String email,
       String? error,
       bool isCodeError});
 }
@@ -124,6 +132,7 @@ class __$$DeleteUserStateImplCopyWithImpl<$Res>
     Object? isSendCodeSuccess = null,
     Object? isVerifyCodeSuccess = null,
     Object? code = null,
+    Object? email = null,
     Object? error = freezed,
     Object? isCodeError = null,
   }) {
@@ -144,6 +153,10 @@ class __$$DeleteUserStateImplCopyWithImpl<$Res>
           ? _value.code
           : code // ignore: cast_nullable_to_non_nullable
               as String,
+      email: null == email
+          ? _value.email
+          : email // ignore: cast_nullable_to_non_nullable
+              as String,
       error: freezed == error
           ? _value.error
           : error // ignore: cast_nullable_to_non_nullable
@@ -164,6 +177,7 @@ class _$DeleteUserStateImpl implements _DeleteUserState {
       this.isSendCodeSuccess = false,
       this.isVerifyCodeSuccess = false,
       this.code = '',
+      this.email = '',
       this.error,
       this.isCodeError = false});
 
@@ -180,6 +194,9 @@ class _$DeleteUserStateImpl implements _DeleteUserState {
   @JsonKey()
   final String code;
   @override
+  @JsonKey()
+  final String email;
+  @override
   final String? error;
   @override
   @JsonKey()
@@ -187,7 +204,7 @@ class _$DeleteUserStateImpl implements _DeleteUserState {
 
   @override
   String toString() {
-    return 'DeleteUserState(isLoading: $isLoading, isSendCodeSuccess: $isSendCodeSuccess, isVerifyCodeSuccess: $isVerifyCodeSuccess, code: $code, error: $error, isCodeError: $isCodeError)';
+    return 'DeleteUserState(isLoading: $isLoading, isSendCodeSuccess: $isSendCodeSuccess, isVerifyCodeSuccess: $isVerifyCodeSuccess, code: $code, email: $email, error: $error, isCodeError: $isCodeError)';
   }
 
   @override
@@ -202,6 +219,7 @@ class _$DeleteUserStateImpl implements _DeleteUserState {
             (identical(other.isVerifyCodeSuccess, isVerifyCodeSuccess) ||
                 other.isVerifyCodeSuccess == isVerifyCodeSuccess) &&
             (identical(other.code, code) || other.code == code) &&
+            (identical(other.email, email) || other.email == email) &&
             (identical(other.error, error) || other.error == error) &&
             (identical(other.isCodeError, isCodeError) ||
                 other.isCodeError == isCodeError));
@@ -209,7 +227,7 @@ class _$DeleteUserStateImpl implements _DeleteUserState {
 
   @override
   int get hashCode => Object.hash(runtimeType, isLoading, isSendCodeSuccess,
-      isVerifyCodeSuccess, code, error, isCodeError);
+      isVerifyCodeSuccess, code, email, error, isCodeError);
 
   @JsonKey(ignore: true)
   @override
@@ -225,6 +243,7 @@ abstract class _DeleteUserState implements DeleteUserState {
       final bool isSendCodeSuccess,
       final bool isVerifyCodeSuccess,
       final String code,
+      final String email,
       final String? error,
       final bool isCodeError}) = _$DeleteUserStateImpl;
 
@@ -237,6 +256,8 @@ abstract class _DeleteUserState implements DeleteUserState {
   @override
   String get code;
   @override
+  String get email;
+  @override
   String? get error;
   @override
   bool get isCodeError;
diff --git a/lib/views/screens/delete_user_screen.dart b/lib/views/screens/delete_user_screen.dart
index 8d73222..2a3594d 100644
--- a/lib/views/screens/delete_user_screen.dart
+++ b/lib/views/screens/delete_user_screen.dart
@@ -18,6 +18,16 @@ class DeleteUserScreen extends ConsumerStatefulWidget {
 
 class _DeleteUserScreenState extends ConsumerState<DeleteUserScreen> {
   final TextEditingController codeEditController = TextEditingController();
+  final TextEditingController emailEditController = TextEditingController();
+  @override
+  void initState() {
+    super.initState();
+    Future.microtask(() {
+      ref.read(deleteUserViewModelProvider.notifier).getEmail();
+      emailEditController.text =
+          ref.read(deleteUserViewModelProvider.select((state) => state.email));
+    });
+  }
 
   @override
   Widget build(BuildContext context) {
@@ -31,6 +41,8 @@ class _DeleteUserScreenState extends ConsumerState<DeleteUserScreen> {
         ref.watch(deleteUserViewModelProvider.select((state) => state.error));
     final isCodeError = ref.watch(
         deleteUserViewModelProvider.select((state) => state.isCodeError));
+    final email =
+        ref.watch(deleteUserViewModelProvider.select((state) => state.email));
 
     final _ = ref.watch(timerProvider);
     final timerNotifier = ref.watch(timerProvider.notifier);
@@ -78,6 +90,34 @@ class _DeleteUserScreenState extends ConsumerState<DeleteUserScreen> {
                   child: Column(
                     crossAxisAlignment: CrossAxisAlignment.start,
                     children: [
+                      TextFontWidget.fontRegular(
+                        '이메일',
+                        fontSize: 16.sp,
+                        color: Color(0xFF000000),
+                        fontWeight: FontWeight.w400,
+                      ),
+                      SizedBox(height: 5.h),
+                      RoundedTextField(
+                        height: 50.h,
+                        textEditController: emailEditController,
+                        leftBottomCornerRadius: 8.r,
+                        rightBottomCornerRadius: 8.r,
+                        leftTopCornerRadius: 8.r,
+                        rightTopCornerRadius: 8.r,
+                        borderWidth: 1.w,
+                        maxLines: 1,
+                        textInputType: TextInputType.text,
+                        textAlign: TextAlign.left,
+                        hintText: '이메일 입력',
+                        readOnly: true,
+                        paddingLeft: 0.w,
+                        textStyle: TextFontWidget.fontRegularStyle(
+                          fontSize: 14.sp,
+                          color: Color(0xFF959595),
+                        ),
+                        backgroundColor: Color(0xFFE6E6E6),
+                      ),
+                      SizedBox(height: 16.h),
                       SizedBox(
                         width: double.infinity,
                         height: 56.h,
diff --git a/lib/views/widgets/rounded_rext_field.dart b/lib/views/widgets/rounded_rext_field.dart
index bd173bb..434d553 100644
--- a/lib/views/widgets/rounded_rext_field.dart
+++ b/lib/views/widgets/rounded_rext_field.dart
@@ -114,6 +114,7 @@ class _RoundedTextFieldState extends State<RoundedTextField> {
         bottom: widget.paddingBottom ?? 0,
       ),
       decoration: BoxDecoration(
+        color: widget.backgroundColor,
         border: Border.all(
           color: _focusNode.hasFocus
               ? (widget.borderColor ?? const Color(0xffffB052))
@@ -155,8 +156,6 @@ class _RoundedTextFieldState extends State<RoundedTextField> {
 
   InputDecoration setInputDecoration() {
     return InputDecoration(
-      filled: widget.isBackgroundFilled,
-      fillColor: widget.backgroundColor,
       enabledBorder: OutlineInputBorder(
         borderSide: BorderSide.none,
       ),
